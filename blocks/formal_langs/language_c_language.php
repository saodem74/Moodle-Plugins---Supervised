<?php 
/**
 * Defines a simple  english language lexer for correctwriting question type.
 *
 *
 * @copyright &copy; 2011  Oleg Sychev
 * @author Oleg Sychev, Dmitriy Mamontov, Sergey Pashaev Volgograd State Technical University
 * @license http://www.gnu.org/copyleft/gpl.html GNU Public License
 * @package questions
 */
require_once($CFG->dirroot.'/blocks/formal_langs/tokens_base.php');
require_once($CFG->dirroot.'/blocks/formal_langs/language_base.php');
require_once($CFG->dirroot.'/blocks/formal_langs/jlex.php');
class block_formal_langs_language_c_language extends block_formal_langs_predefined_language
{
    public function __construct() {
        parent::__construct(null,null);
    }
    public function name() {
        return 'c_language';
    }
}
// This wrapper is created because there is no way, we can create other lexer without stream
// And current architecture won't allow to do so, because mostly we need string.
class block_formal_langs_predefined_c_language_lexer {
  public function tokenize($processedstring) {
        $lexer = new block_formal_langs_predefined_c_language_lexer_raw(fopen('data://text/plain;base64,' . base64_encode($processedstring->string), 'r'));
        //Now, we are splitting text into lexemes
        $tokens = array();
        while ($token = $lexer->next_token()) {
            $tokens[] = $token;
        }
        $processedstring->stream->tokens = $tokens;
        $processedstring->stream->errors = $lexer->get_errors();
  }
}


class block_formal_langs_predefined_c_language_lexer_raw extends JLexBase  {
	const YY_BUFFER_SIZE = 512;
	const YY_F = -1;
	const YY_NO_STATE = -1;
	const YY_NOT_ACCEPT = 0;
	const YY_START = 1;
	const YY_END = 2;
	const YY_NO_ANCHOR = 4;
	const YY_BOL = 256;
	var $YY_EOF = 257;

  // @var int number of  current parsed lexeme.
  private  $counter = 0;
  private  $errors  = array();
  private function create_error($symbol) {
     $res = new block_formal_langs_lexical_error();
     $res->token_index = $this->counter;
     $a = new stdClass();
     $a->line = $this->yyline;
     $a->position = $this->yycol;
     $a->symbol = $symbol;
     $res->errormessage = get_string('lexical_error_message','block_formal_langs',$a);
     $this->counter++;
     $this->errors[] = $res;
  }
  public function get_errors() {
     return $this->errors;
  }
  private function create_token($type, $value) {
        // create token object
        $res = new block_formal_langs_token_base(null, $type, $value, $this->return_pos(), $this->counter);
        // increase token count
        $this->counter++;
        return $res;
    }
  private function return_pos() {
        $begin_line = $this->yyline;
        $begin_col = $this->yycol;
        if(strpos($this->yytext(), '\n')) {
            $lines = explode("\n", $this->yytext());
            $num_lines = count($lines);
            $end_line = $begin_line + $num_lines - 1;
            $end_col = strlen($lines[$num_lines -1]);
        } else {
            $end_line = $begin_line;
            $end_col = $begin_col + strlen($this->yytext());
        }
        $res = new block_formal_langs_node_position($begin_line, $end_line, $begin_col, $end_col);
        return $res;
    }
	protected $yy_count_chars = true;
	protected $yy_count_lines = true;

	function __construct($stream) {
		parent::__construct($stream);
		$this->yy_lexical_state = self::YYINITIAL;
	}

	const YYINITIAL = 0;
	static $yy_state_dtrans = array(
		0
	);
	static $yy_acpt = array(
		/* 0 */ self::YY_NOT_ACCEPT,
		/* 1 */ self::YY_NO_ANCHOR,
		/* 2 */ self::YY_NO_ANCHOR,
		/* 3 */ self::YY_NO_ANCHOR,
		/* 4 */ self::YY_NO_ANCHOR,
		/* 5 */ self::YY_NO_ANCHOR,
		/* 6 */ self::YY_NO_ANCHOR,
		/* 7 */ self::YY_NO_ANCHOR,
		/* 8 */ self::YY_NO_ANCHOR,
		/* 9 */ self::YY_NO_ANCHOR,
		/* 10 */ self::YY_NO_ANCHOR,
		/* 11 */ self::YY_NO_ANCHOR,
		/* 12 */ self::YY_NO_ANCHOR,
		/* 13 */ self::YY_NO_ANCHOR,
		/* 14 */ self::YY_NO_ANCHOR,
		/* 15 */ self::YY_NO_ANCHOR,
		/* 16 */ self::YY_NO_ANCHOR,
		/* 17 */ self::YY_NO_ANCHOR,
		/* 18 */ self::YY_NO_ANCHOR,
		/* 19 */ self::YY_NO_ANCHOR,
		/* 20 */ self::YY_NO_ANCHOR,
		/* 21 */ self::YY_NO_ANCHOR,
		/* 22 */ self::YY_NO_ANCHOR,
		/* 23 */ self::YY_NO_ANCHOR,
		/* 24 */ self::YY_NO_ANCHOR,
		/* 25 */ self::YY_NO_ANCHOR,
		/* 26 */ self::YY_NO_ANCHOR,
		/* 27 */ self::YY_NO_ANCHOR,
		/* 28 */ self::YY_NO_ANCHOR,
		/* 29 */ self::YY_NO_ANCHOR,
		/* 30 */ self::YY_NO_ANCHOR,
		/* 31 */ self::YY_NO_ANCHOR,
		/* 32 */ self::YY_NO_ANCHOR,
		/* 33 */ self::YY_NO_ANCHOR,
		/* 34 */ self::YY_NO_ANCHOR,
		/* 35 */ self::YY_NO_ANCHOR,
		/* 36 */ self::YY_NO_ANCHOR,
		/* 37 */ self::YY_NO_ANCHOR,
		/* 38 */ self::YY_NO_ANCHOR,
		/* 39 */ self::YY_NO_ANCHOR,
		/* 40 */ self::YY_NO_ANCHOR,
		/* 41 */ self::YY_NO_ANCHOR,
		/* 42 */ self::YY_NO_ANCHOR,
		/* 43 */ self::YY_NO_ANCHOR,
		/* 44 */ self::YY_NO_ANCHOR,
		/* 45 */ self::YY_NO_ANCHOR,
		/* 46 */ self::YY_NO_ANCHOR,
		/* 47 */ self::YY_NO_ANCHOR,
		/* 48 */ self::YY_NO_ANCHOR,
		/* 49 */ self::YY_NO_ANCHOR,
		/* 50 */ self::YY_NO_ANCHOR,
		/* 51 */ self::YY_NO_ANCHOR,
		/* 52 */ self::YY_NO_ANCHOR,
		/* 53 */ self::YY_NO_ANCHOR,
		/* 54 */ self::YY_NO_ANCHOR,
		/* 55 */ self::YY_NO_ANCHOR,
		/* 56 */ self::YY_NO_ANCHOR,
		/* 57 */ self::YY_NO_ANCHOR,
		/* 58 */ self::YY_NO_ANCHOR,
		/* 59 */ self::YY_NOT_ACCEPT,
		/* 60 */ self::YY_NO_ANCHOR,
		/* 61 */ self::YY_NO_ANCHOR,
		/* 62 */ self::YY_NO_ANCHOR,
		/* 63 */ self::YY_NO_ANCHOR,
		/* 64 */ self::YY_NO_ANCHOR,
		/* 65 */ self::YY_NO_ANCHOR,
		/* 66 */ self::YY_NO_ANCHOR,
		/* 67 */ self::YY_NO_ANCHOR,
		/* 68 */ self::YY_NO_ANCHOR,
		/* 69 */ self::YY_NO_ANCHOR,
		/* 70 */ self::YY_NO_ANCHOR,
		/* 71 */ self::YY_NOT_ACCEPT,
		/* 72 */ self::YY_NO_ANCHOR,
		/* 73 */ self::YY_NO_ANCHOR,
		/* 74 */ self::YY_NO_ANCHOR,
		/* 75 */ self::YY_NO_ANCHOR,
		/* 76 */ self::YY_NO_ANCHOR,
		/* 77 */ self::YY_NO_ANCHOR,
		/* 78 */ self::YY_NOT_ACCEPT,
		/* 79 */ self::YY_NO_ANCHOR,
		/* 80 */ self::YY_NO_ANCHOR,
		/* 81 */ self::YY_NO_ANCHOR,
		/* 82 */ self::YY_NOT_ACCEPT,
		/* 83 */ self::YY_NO_ANCHOR,
		/* 84 */ self::YY_NO_ANCHOR,
		/* 85 */ self::YY_NO_ANCHOR,
		/* 86 */ self::YY_NOT_ACCEPT,
		/* 87 */ self::YY_NO_ANCHOR,
		/* 88 */ self::YY_NOT_ACCEPT,
		/* 89 */ self::YY_NO_ANCHOR,
		/* 90 */ self::YY_NOT_ACCEPT,
		/* 91 */ self::YY_NO_ANCHOR,
		/* 92 */ self::YY_NOT_ACCEPT,
		/* 93 */ self::YY_NO_ANCHOR,
		/* 94 */ self::YY_NOT_ACCEPT,
		/* 95 */ self::YY_NO_ANCHOR,
		/* 96 */ self::YY_NOT_ACCEPT,
		/* 97 */ self::YY_NO_ANCHOR,
		/* 98 */ self::YY_NOT_ACCEPT,
		/* 99 */ self::YY_NO_ANCHOR,
		/* 100 */ self::YY_NOT_ACCEPT,
		/* 101 */ self::YY_NO_ANCHOR,
		/* 102 */ self::YY_NOT_ACCEPT,
		/* 103 */ self::YY_NO_ANCHOR,
		/* 104 */ self::YY_NOT_ACCEPT,
		/* 105 */ self::YY_NO_ANCHOR,
		/* 106 */ self::YY_NOT_ACCEPT,
		/* 107 */ self::YY_NO_ANCHOR,
		/* 108 */ self::YY_NOT_ACCEPT,
		/* 109 */ self::YY_NO_ANCHOR,
		/* 110 */ self::YY_NOT_ACCEPT,
		/* 111 */ self::YY_NO_ANCHOR,
		/* 112 */ self::YY_NOT_ACCEPT,
		/* 113 */ self::YY_NO_ANCHOR,
		/* 114 */ self::YY_NOT_ACCEPT,
		/* 115 */ self::YY_NO_ANCHOR,
		/* 116 */ self::YY_NOT_ACCEPT,
		/* 117 */ self::YY_NO_ANCHOR,
		/* 118 */ self::YY_NO_ANCHOR,
		/* 119 */ self::YY_NO_ANCHOR,
		/* 120 */ self::YY_NO_ANCHOR,
		/* 121 */ self::YY_NO_ANCHOR,
		/* 122 */ self::YY_NO_ANCHOR,
		/* 123 */ self::YY_NO_ANCHOR,
		/* 124 */ self::YY_NO_ANCHOR,
		/* 125 */ self::YY_NO_ANCHOR,
		/* 126 */ self::YY_NO_ANCHOR,
		/* 127 */ self::YY_NO_ANCHOR,
		/* 128 */ self::YY_NO_ANCHOR,
		/* 129 */ self::YY_NO_ANCHOR,
		/* 130 */ self::YY_NO_ANCHOR,
		/* 131 */ self::YY_NO_ANCHOR,
		/* 132 */ self::YY_NO_ANCHOR,
		/* 133 */ self::YY_NO_ANCHOR,
		/* 134 */ self::YY_NO_ANCHOR,
		/* 135 */ self::YY_NO_ANCHOR,
		/* 136 */ self::YY_NO_ANCHOR,
		/* 137 */ self::YY_NO_ANCHOR,
		/* 138 */ self::YY_NO_ANCHOR,
		/* 139 */ self::YY_NO_ANCHOR,
		/* 140 */ self::YY_NO_ANCHOR,
		/* 141 */ self::YY_NO_ANCHOR,
		/* 142 */ self::YY_NO_ANCHOR,
		/* 143 */ self::YY_NO_ANCHOR,
		/* 144 */ self::YY_NO_ANCHOR,
		/* 145 */ self::YY_NO_ANCHOR,
		/* 146 */ self::YY_NO_ANCHOR,
		/* 147 */ self::YY_NO_ANCHOR,
		/* 148 */ self::YY_NO_ANCHOR,
		/* 149 */ self::YY_NO_ANCHOR,
		/* 150 */ self::YY_NO_ANCHOR,
		/* 151 */ self::YY_NO_ANCHOR,
		/* 152 */ self::YY_NO_ANCHOR,
		/* 153 */ self::YY_NO_ANCHOR,
		/* 154 */ self::YY_NO_ANCHOR,
		/* 155 */ self::YY_NO_ANCHOR,
		/* 156 */ self::YY_NO_ANCHOR,
		/* 157 */ self::YY_NO_ANCHOR,
		/* 158 */ self::YY_NO_ANCHOR,
		/* 159 */ self::YY_NO_ANCHOR,
		/* 160 */ self::YY_NO_ANCHOR,
		/* 161 */ self::YY_NO_ANCHOR,
		/* 162 */ self::YY_NO_ANCHOR,
		/* 163 */ self::YY_NO_ANCHOR,
		/* 164 */ self::YY_NO_ANCHOR,
		/* 165 */ self::YY_NO_ANCHOR,
		/* 166 */ self::YY_NO_ANCHOR,
		/* 167 */ self::YY_NO_ANCHOR,
		/* 168 */ self::YY_NO_ANCHOR,
		/* 169 */ self::YY_NO_ANCHOR,
		/* 170 */ self::YY_NO_ANCHOR,
		/* 171 */ self::YY_NO_ANCHOR,
		/* 172 */ self::YY_NO_ANCHOR,
		/* 173 */ self::YY_NO_ANCHOR,
		/* 174 */ self::YY_NO_ANCHOR,
		/* 175 */ self::YY_NO_ANCHOR,
		/* 176 */ self::YY_NO_ANCHOR,
		/* 177 */ self::YY_NO_ANCHOR,
		/* 178 */ self::YY_NO_ANCHOR,
		/* 179 */ self::YY_NO_ANCHOR,
		/* 180 */ self::YY_NO_ANCHOR,
		/* 181 */ self::YY_NO_ANCHOR,
		/* 182 */ self::YY_NO_ANCHOR,
		/* 183 */ self::YY_NO_ANCHOR,
		/* 184 */ self::YY_NO_ANCHOR,
		/* 185 */ self::YY_NO_ANCHOR,
		/* 186 */ self::YY_NO_ANCHOR,
		/* 187 */ self::YY_NO_ANCHOR,
		/* 188 */ self::YY_NO_ANCHOR,
		/* 189 */ self::YY_NO_ANCHOR,
		/* 190 */ self::YY_NO_ANCHOR,
		/* 191 */ self::YY_NO_ANCHOR,
		/* 192 */ self::YY_NO_ANCHOR,
		/* 193 */ self::YY_NO_ANCHOR
	);
		static $yy_cmap = array(
 4, 4, 4, 4, 4, 4, 4, 4, 4, 64, 5, 4, 64, 3, 4, 4, 4, 4, 4, 4,
 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 64, 52, 39, 4, 4, 48, 49, 37,
 58, 59, 2, 47, 56, 41, 43, 1, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 57, 53,
 46, 45, 44, 63, 4, 34, 34, 34, 34, 40, 42, 30, 30, 30, 30, 30, 36, 30, 30, 30,
 30, 30, 30, 30, 30, 35, 30, 30, 33, 30, 30, 60, 38, 61, 50, 30, 4, 6, 10, 14,
 18, 12, 19, 23, 26, 17, 30, 13, 20, 21, 16, 9, 28, 30, 11, 15, 8, 7, 29, 25,
 22, 27, 24, 54, 51, 55, 62, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0,);

		static $yy_rmap = array(
 0, 1, 2, 1, 1, 3, 4, 5, 6, 7, 8, 9, 10, 1, 1, 1, 1, 11, 1, 1,
 1, 1, 1, 1, 1, 1, 12, 13, 14, 15, 1, 1, 1, 16, 17, 1, 1, 1, 18, 1,
 1, 1, 1, 1, 1, 1, 1, 1, 12, 19, 20, 1, 1, 1, 1, 1, 1, 1, 12, 21,
 22, 23, 24, 25, 1, 1, 1, 1, 1, 26, 27, 28, 29, 30, 31, 1, 32, 33, 34, 35,
 36, 37, 38, 39, 40, 41, 23, 42, 30, 43, 26, 44, 45, 46, 27, 47, 48, 49, 50, 51,
 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
 72, 12, 73, 74, 12, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89,
 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109,
 110, 111, 112, 113, 114, 115, 98, 116, 117, 118, 119, 120, 121, 122, 123, 119, 124, 125, 126, 127,
 128, 129, 130, 12, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,);

		static $yy_nxt = array(
array(
 1, 2, 60, -1, 3, 4, 5, 173, 181, 183, 185, 186, 187, 183, 188, 189, 183, 62, 74, 120,
 190, 183, 183, 191, 183, 192, 183, 183, 183, 193, 183, 6, 63, 183, 183, 183, 81, 61, 3, 73,
 183, 72, 183, 7, 80, 8, 84, 79, 83, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
 20, 21, 22, 23, 4,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, 59, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 123, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, 75, -1, -1, -1, -1, 78, -1, -1, -1, -1, -1, -1, -1,
 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, 6, -1, -1, 75, 75, -1, -1, -1,
 78, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, 98, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 42, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 149, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 106, -1, -1, -1, -1, -1, -1, 64,
 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1, -1, 64, -1, -1, -1,
 106, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, 65, -1, -1, -1, -1, 78, -1, -1, -1, -1, -1, -1, -1,
 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, 29, -1, -1, 65, 65, -1, -1, -1,
 78, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, 66,
 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1, -1, 66, -1, -1, -1,
 108, -1, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67,
 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, -1, -1, -1, 67, -1, -1, -1,
 -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 50, 68, -1, -1, 50, -1, 50, -1, 50, -1, -1, -1, 50, 50,
 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, -1, 50, 68, 68, -1, -1, -1,
 50, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, 100, 100, -1, 100, -1, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
 100, 100, 100, 100, 100,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, -1, 92, 90,
 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
 90, 90, 90, 90, 90,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 85, 183, 183, 26,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, 75, -1, -1, -1, -1, 78, -1, -1, -1, -1, -1, -1, -1,
 75, -1, 82, -1, -1, -1, -1, -1, -1, -1, -1, 29, 29, 82, -1, 75, 75, -1, -1, -1,
 78, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 96, 52,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94,
),
array(
 -1, -1, -1, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
 102, 102, 102, 102, 102,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, 30, -1, -1, 31, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 96, -1,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 27, 183, 183, 137, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64,
 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 76, -1, -1, -1, 64, -1, -1, -1,
 -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66,
 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 77, 77, -1, -1, -1, 66, -1, -1, -1,
 -1, -1, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, -1, -1, -1, -1, -1, -1, -1,
 -1, 104, -1, -1, -1, -1, -1, 104, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 39, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, 34, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, 86, -1, 88,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, 50, -1, 50, -1, 50, -1, -1, -1, 50, 50,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, -1, 50, -1, -1, -1, -1, -1,
 50, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, 15, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, 37, 38, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 48, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 26, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 121, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 121, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 48, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 48, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 96, 70,
 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
 94, 94, 94, 94, 94,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 26, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, 53, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 48, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, 110, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 58, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, 112, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
 102, 102, 102, 102, 102,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 121, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 121, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 76, -1, -1, -1, -1, -1, -1, -1,
 -1, 114, -1, -1, -1, -1, -1, 114, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 58, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 77, 77, -1, -1, -1, -1, -1, -1, -1,
 -1, 116, -1, -1, -1, -1, -1, 116, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 26, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 26, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 26, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 76, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 26,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 77, 77, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 58, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 48, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 58,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 87, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 138, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 121, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 122, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 182, 183, 142, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 174, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 143, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 144, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 184, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 89, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 91, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 145, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 146, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 93, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 147, 183, 183, 183, 183, 176, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 148, 177, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 178, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 150,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 151, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 95, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 97, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 99, 183, 183,
 179, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 101, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 103, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 155, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 155, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 157, 183, 183, 183, 183, 183, 183, 105, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 158, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 160, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 163, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 164, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 85, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 107, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 166, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 167, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 109, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 180, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 168, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 111, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 113, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 99, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 115, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 117, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 118, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 169, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 170, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 119, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 172, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 105, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 152, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 87, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 91, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 125, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 154, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 159, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 161, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 162, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 165, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 171, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 126, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 153, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 156, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 127, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 128, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 129, 183, 183, 183,
 130, 183, 131, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 130, 183, 183, 132, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 133, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 134, 183, 183, 183, 183, 183, 183, 183, 183, 135, 183, 183,
 183, 183, 183, 183, 183, 136, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 139, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 140, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 175, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
array(
 -1, -1, -1, -1, -1, -1, 183, 183, 183, 141, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 124, 124, 183, 183, 183, 183, -1, -1, -1,
 183, -1, 183, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
 -1, -1, -1, -1, -1,
),
);

	public function /*Yytoken*/ next_token ()
 {
		$yy_anchor = self::YY_NO_ANCHOR;
		$yy_state = self::$yy_state_dtrans[$this->yy_lexical_state];
		$yy_next_state = self::YY_NO_STATE;
		$yy_last_accept_state = self::YY_NO_STATE;
		$yy_initial = true;

		$this->yy_mark_start();
		$yy_this_accept = self::$yy_acpt[$yy_state];
		if (self::YY_NOT_ACCEPT != $yy_this_accept) {
			$yy_last_accept_state = $yy_state;
			$this->yy_mark_end();
		}
		while (true) {
			if ($yy_initial && $this->yy_at_bol) $yy_lookahead = self::YY_BOL;
			else $yy_lookahead = $this->yy_advance();
			$yy_next_state = self::$yy_nxt[self::$yy_rmap[$yy_state]][self::$yy_cmap[$yy_lookahead]];
			if ($this->YY_EOF == $yy_lookahead && true == $yy_initial) {
				return null;
			}
			if (self::YY_F != $yy_next_state) {
				$yy_state = $yy_next_state;
				$yy_initial = false;
				$yy_this_accept = self::$yy_acpt[$yy_state];
				if (self::YY_NOT_ACCEPT != $yy_this_accept) {
					$yy_last_accept_state = $yy_state;
					$this->yy_mark_end();
				}
			}
			else {
				if (self::YY_NO_STATE == $yy_last_accept_state) {
					throw new Exception("Lexical Error: Unmatched Input.");
				}
				else {
					$yy_anchor = self::$yy_acpt[$yy_last_accept_state];
					if (0 != (self::YY_END & $yy_anchor)) {
						$this->yy_move_end();
					}
					$this->yy_to_mark();
					switch ($yy_last_accept_state) {
						case 1:
							
						case -2:
							break;
						case 2:
							{ return $this->create_token("mathops",$this->yytext()); }
						case -3:
							break;
						case 3:
							{ $this->create_error($this->yytext()); return $this->create_token("unknown",$this->yytext());}
						case -4:
							break;
						case 4:
							{  }
						case -5:
							break;
						case 5:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -6:
							break;
						case 6:
							{ return $this->create_token("constant",$this->yytext()); }
						case -7:
							break;
						case 7:
							{ return $this->create_token("dot",$this->yytext()); }
						case -8:
							break;
						case 8:
							{ return $this->create_token("assign",$this->yytext()); }
						case -9:
							break;
						case 9:
							{ return $this->create_token("binand",$this->yytext()); }
						case -10:
							break;
						case 10:
							{ return $this->create_token("binxor",$this->yytext()); }
						case -11:
							break;
						case 11:
							{ return $this->create_token("binor",$this->yytext()); }
						case -12:
							break;
						case 12:
							{ return $this->create_token("not",$this->yytext()); }
						case -13:
							break;
						case 13:
							{ return $this->create_token("semicolon",$this->yytext()); }
						case -14:
							break;
						case 14:
							{ return $this->create_token("lfbrace","{"); }
						case -15:
							break;
						case 15:
							{ return $this->create_token("rfbrace","}"); }
						case -16:
							break;
						case 16:
							{ return $this->create_token("comma",$this->yytext()); }
						case -17:
							break;
						case 17:
							{ return $this->create_token("colon",$this->yytext()); }
						case -18:
							break;
						case 18:
							{ return $this->create_token("lbrace",$this->yytext()); }
						case -19:
							break;
						case 19:
							{ return $this->create_token("rbrace",$this->yytext()); }
						case -20:
							break;
						case 20:
							{ return $this->create_token("lsbrace","["); }
						case -21:
							break;
						case 21:
							{ return $this->create_token("rsbrace","]"); }
						case -22:
							break;
						case 22:
							{ return $this->create_token("binnot",$this->yytext()); }
						case -23:
							break;
						case 23:
							{ return $this->create_token("question",$this->yytext()); }
						case -24:
							break;
						case 24:
							{ return $this->create_token("div_assign",$this->yytext()); }
						case -25:
							break;
						case 25:
							{ return $this->create_token("mul_assign",$this->yytext()); }
						case -26:
							break;
						case 26:
							{ return $this->create_token("keyword",$this->yytext()); }
						case -27:
							break;
						case 27:
							{ return $this->create_token("keyword",$this->yytext()); }
						case -28:
							break;
						case 28:
							{ return $this->create_token("constant",$this->yytext()); }
						case -29:
							break;
						case 29:
							{ return $this->create_token("constant",$this->yytext()); }
						case -30:
							break;
						case 30:
							{ return $this->create_token("decrement",$this->yytext()); }
						case -31:
							break;
						case 31:
							{ return $this->create_token("ptr_field_access",$this->yytext()); }
						case -32:
							break;
						case 32:
							{ return $this->create_token("sub_assign",$this->yytext()); }
						case -33:
							break;
						case 33:
							{ return $this->create_token("constant",$this->yytext()); }
						case -34:
							break;
						case 34:
							{ return $this->create_token("right_shift",$this->yytext()); }
						case -35:
							break;
						case 35:
							{ return $this->create_token("ge",$this->yytext()); }
						case -36:
							break;
						case 36:
							{ return $this->create_token("eq",$this->yytext()); }
						case -37:
							break;
						case 37:
							{ return $this->create_token("le",$this->yytext()); }
						case -38:
							break;
						case 38:
							{ return $this->create_token("left_shift",$this->yytext()); }
						case -39:
							break;
						case 39:
							{ return $this->create_token("add_assign",$this->yytext()); }
						case -40:
							break;
						case 40:
							{ return $this->create_token("increment",$this->yytext()); }
						case -41:
							break;
						case 41:
							{ return $this->create_token("mod_assign",$this->yytext()); }
						case -42:
							break;
						case 42:
							{ return $this->create_token("and_assign",$this->yytext()); }
						case -43:
							break;
						case 43:
							{ return $this->create_token("and",$this->yytext()); }
						case -44:
							break;
						case 44:
							{ return $this->create_token("xor_assign",$this->yytext()); }
						case -45:
							break;
						case 45:
							{ return $this->create_token("or_assign",$this->yytext()); }
						case -46:
							break;
						case 46:
							{ return $this->create_token("or",$this->yytext()); }
						case -47:
							break;
						case 47:
							{ return $this->create_token("neq",$this->yytext()); }
						case -48:
							break;
						case 48:
							{ return $this->create_token("typename",$this->yytext()); }
						case -49:
							break;
						case 49:
							{ return $this->create_token("constant",$this->yytext()); }
						case -50:
							break;
						case 50:
							{ return $this->create_token("constant",$this->yytext()); }
						case -51:
							break;
						case 51:
							{ return $this->create_token("character",$this->yytext()); }
						case -52:
							break;
						case 52:
							{ return $this->create_token("string",$this->yytext()); }
						case -53:
							break;
						case 53:
							{ return $this->create_token("ellipsis",$this->yytext()); }
						case -54:
							break;
						case 54:
							{ return $this->create_token("right_assign",$this->yytext()); }
						case -55:
							break;
						case 55:
							{ return $this->create_token("left_assign",$this->yytext()); }
						case -56:
							break;
						case 56:
							{ return $this->create_token("comment",$this->yytext()); }
						case -57:
							break;
						case 57:
							{ return $this->create_token("comment",$this->yytext()); }
						case -58:
							break;
						case 58:
							{ return $this->create_token("keyword",$this->yytext()); }
						case -59:
							break;
						case 60:
							{ return $this->create_token("mathops",$this->yytext()); }
						case -60:
							break;
						case 61:
							{ $this->create_error($this->yytext()); return $this->create_token("unknown",$this->yytext());}
						case -61:
							break;
						case 62:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -62:
							break;
						case 63:
							{ return $this->create_token("constant",$this->yytext()); }
						case -63:
							break;
						case 64:
							{ return $this->create_token("constant",$this->yytext()); }
						case -64:
							break;
						case 65:
							{ return $this->create_token("constant",$this->yytext()); }
						case -65:
							break;
						case 66:
							{ return $this->create_token("constant",$this->yytext()); }
						case -66:
							break;
						case 67:
							{ return $this->create_token("constant",$this->yytext()); }
						case -67:
							break;
						case 68:
							{ return $this->create_token("constant",$this->yytext()); }
						case -68:
							break;
						case 69:
							{ return $this->create_token("character",$this->yytext()); }
						case -69:
							break;
						case 70:
							{ return $this->create_token("string",$this->yytext()); }
						case -70:
							break;
						case 72:
							{ return $this->create_token("mathops",$this->yytext()); }
						case -71:
							break;
						case 73:
							{ $this->create_error($this->yytext()); return $this->create_token("unknown",$this->yytext());}
						case -72:
							break;
						case 74:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -73:
							break;
						case 75:
							{ return $this->create_token("constant",$this->yytext()); }
						case -74:
							break;
						case 76:
							{ return $this->create_token("constant",$this->yytext()); }
						case -75:
							break;
						case 77:
							{ return $this->create_token("constant",$this->yytext()); }
						case -76:
							break;
						case 79:
							{ return $this->create_token("mathops",$this->yytext()); }
						case -77:
							break;
						case 80:
							{ $this->create_error($this->yytext()); return $this->create_token("unknown",$this->yytext());}
						case -78:
							break;
						case 81:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -79:
							break;
						case 83:
							{ return $this->create_token("mathops",$this->yytext()); }
						case -80:
							break;
						case 84:
							{ $this->create_error($this->yytext()); return $this->create_token("unknown",$this->yytext());}
						case -81:
							break;
						case 85:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -82:
							break;
						case 87:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -83:
							break;
						case 89:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -84:
							break;
						case 91:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -85:
							break;
						case 93:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -86:
							break;
						case 95:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -87:
							break;
						case 97:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -88:
							break;
						case 99:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -89:
							break;
						case 101:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -90:
							break;
						case 103:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -91:
							break;
						case 105:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -92:
							break;
						case 107:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -93:
							break;
						case 109:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -94:
							break;
						case 111:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -95:
							break;
						case 113:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -96:
							break;
						case 115:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -97:
							break;
						case 117:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -98:
							break;
						case 118:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -99:
							break;
						case 119:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -100:
							break;
						case 120:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -101:
							break;
						case 121:
							{ return $this->create_token("keyword",$this->yytext()); }
						case -102:
							break;
						case 122:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -103:
							break;
						case 123:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -104:
							break;
						case 124:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -105:
							break;
						case 125:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -106:
							break;
						case 126:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -107:
							break;
						case 127:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -108:
							break;
						case 128:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -109:
							break;
						case 129:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -110:
							break;
						case 130:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -111:
							break;
						case 131:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -112:
							break;
						case 132:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -113:
							break;
						case 133:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -114:
							break;
						case 134:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -115:
							break;
						case 135:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -116:
							break;
						case 136:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -117:
							break;
						case 137:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -118:
							break;
						case 138:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -119:
							break;
						case 139:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -120:
							break;
						case 140:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -121:
							break;
						case 141:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -122:
							break;
						case 142:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -123:
							break;
						case 143:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -124:
							break;
						case 144:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -125:
							break;
						case 145:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -126:
							break;
						case 146:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -127:
							break;
						case 147:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -128:
							break;
						case 148:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -129:
							break;
						case 149:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -130:
							break;
						case 150:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -131:
							break;
						case 151:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -132:
							break;
						case 152:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -133:
							break;
						case 153:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -134:
							break;
						case 154:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -135:
							break;
						case 155:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -136:
							break;
						case 156:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -137:
							break;
						case 157:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -138:
							break;
						case 158:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -139:
							break;
						case 159:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -140:
							break;
						case 160:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -141:
							break;
						case 161:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -142:
							break;
						case 162:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -143:
							break;
						case 163:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -144:
							break;
						case 164:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -145:
							break;
						case 165:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -146:
							break;
						case 166:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -147:
							break;
						case 167:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -148:
							break;
						case 168:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -149:
							break;
						case 169:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -150:
							break;
						case 170:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -151:
							break;
						case 171:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -152:
							break;
						case 172:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -153:
							break;
						case 173:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -154:
							break;
						case 174:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -155:
							break;
						case 175:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -156:
							break;
						case 176:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -157:
							break;
						case 177:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -158:
							break;
						case 178:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -159:
							break;
						case 179:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -160:
							break;
						case 180:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -161:
							break;
						case 181:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -162:
							break;
						case 182:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -163:
							break;
						case 183:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -164:
							break;
						case 184:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -165:
							break;
						case 185:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -166:
							break;
						case 186:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -167:
							break;
						case 187:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -168:
							break;
						case 188:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -169:
							break;
						case 189:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -170:
							break;
						case 190:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -171:
							break;
						case 191:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -172:
							break;
						case 192:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -173:
							break;
						case 193:
							{ return $this->create_token("identifier",$this->yytext()); }
						case -174:
							break;
						default:
						$this->yy_error('INTERNAL',false);
					case -1:
					}
					$yy_initial = true;
					$yy_state = self::$yy_state_dtrans[$this->yy_lexical_state];
					$yy_next_state = self::YY_NO_STATE;
					$yy_last_accept_state = self::YY_NO_STATE;
					$this->yy_mark_start();
					$yy_this_accept = self::$yy_acpt[$yy_state];
					if (self::YY_NOT_ACCEPT != $yy_this_accept) {
						$yy_last_accept_state = $yy_state;
						$this->yy_mark_end();
					}
				}
			}
		}
	}
}
