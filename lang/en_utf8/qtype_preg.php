<?php // $Id: qtype_preg.php,v 1.1.2.2 2009/08/31 16:37:53 arborrow Exp $
$string['addingpreg'] = 'Adding regular expression question';$string['addmoreanswerblanks'] = 'Adding regular expression options';$string['answersinstruct'] = 'Enter a perl-compatible regular expression as an answer. You should enter at least one expression. If correct answer is given, it should match at least one regular expression with 100% grade.';$string['answerno'] = 'Answer $a';$string['assertff'] = 'False forward assert';$string['asserttb'] = 'True backward assert';$string['assertfb'] = 'False backward assert';$string['condsubpatt'] = 'Conditional subpattern';$string['correctanswer'] =' Correct answer';$string['dfa_preg_matcher'] = 'Deterministic finite state automata';$string['editingpreg'] = 'Editing regular expression question';$string['engine'] = 'Matching engine';$string['exactmatch'] = 'Exact matching';$string['hintbutton'] = 'Hint';$string['hintgradeborder'] = 'Hint grade border';$string['hintpenalty'] = 'Penalty for hint';$string['incorrectregex'] = 'Incorrect regular expression - syntax error!';$string['largedfa'] = 'Too large dfa';$string['link'] = 'Link is unsupported';$string['lazyquant'] = 'Lazy Quantificators';$string['noabstractaccept'] = 'Matching by abstract matcher';$string['noregex'] = 'No regex supplied for matching';$string['nocorrectanswermatch'] = 'No maximum grade regular expression matches correct answer.';$string['preg'] = 'Regular expression';$string['preg_php_matcher'] = 'PHP preg extension';$string['subpattern'] = 'Subpattern';$string['unsupported'] = 'is unsupported';$string['unsupportedmodifier'] = 'Error: modifier $a->modifier isn\'t supported by engine $a->classname.';$string['usehint'] = 'Use hint';
?>
