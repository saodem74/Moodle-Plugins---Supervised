<?php
//global $CFG;
//require_once($CFG->dirroot.'/course/moodleform_mod.php');
define('POASASSIGNMENT_GRADER_NO_TEST', 0);
define('POASASSIGNMENT_GRADER_COMMON_TEST', 1);
define('POASASSIGNMENT_GRADER_INDIVIDUAL_TEST', 2);

define('POASASSIGNMENT_GRADER_SHOW_TESTING_PROGRAM_FEEDBACK', 1);
define('POASASSIGNMENT_GRADER_SHOW_TEST_INPUT_DATA', 2);
define('POASASSIGNMENT_GRADER_SHOW_OUTPUT_STUDENT_DATA', 4);
define('POASASSIGNMENT_GRADER_SHOW_DIFF', 8);
define('POASASSIGNMENT_GRADER_SHOW_TESTS_NAMES', 16);
define('POASASSIGNMENT_GRADER_SHOW_NUMBER_OF_PASSED_TESTS', 32);
define('POASASSIGNMENT_GRADER_SHOW_RATING', 64);

/**
 * Saves data generated by testing program 
 */
class simple_test_result {
    /**
     * Test name
     */
    public $testname;
    /** 
     * Shows, was the test completed successfully
     */
    public $issuccessful;
    /**
     * Input data for the test
     */
    public $testinputdata;
    /**
     * Result data of student's submission
     */
    public $studentoutputdata;
    /**
     * Testing program comments for the test
     */
    public $feedback;
    /**
     * Difference between test output data and student's submission
     */
    public $outputdiff;
}

/* 
 * Parent of all graders classes
 */
abstract class grader {


    
    /**
     * Returns test mode of this grader (NO_TEST, COMMON_TEST or INDIVIDUAL_TEST)
     * @return int test mode
     */
    public function get_test_mode() {
        return POASASSIGNMENT_GRADER_NO_TEST;
    }
    
    /**
     * Returns name of the grader
     * @return string name of the grader
     */
    public static function name() {
        return 'abstract grader';
    }
    
    /**
     * Checks poasassignment options to be sure this grader can be 
     * used
     * @param array $data poasassignment options
     * @param array $errors denied options
     */
    public static function validation($data, &$errors) {
    }
    
    public function test_attempt($attemptid, $taskid) {
    }
    /**
     * Shows settings of the grader. Child classes can override this
     * method to show their own settings. By default, all graders 
     * have options, what to show to the student after testing his 
     * program, and what to show to the teacher
     * @param $mform moodle form, where grader's options are placed
     * @param $usedgraderid id of grader in poasassignment_used_graders table
     */
    public static function show_settings($mform, $usedgraderid) {
        global $DB;
        $usedgraderrecord = $DB->get_record('poasassignment_used_graders', array('id' => $usedgraderid));
        $graderrecord = $DB->get_record('poasassignment_graders', array('id' => $usedgraderrecord->graderid));
        $gradername = $graderrecord->name;
        
        $mform->addElement('header',__CLASS__,$gradername::name());
        
        $settings = array();
        $settings['feedback'] = POASASSIGNMENT_GRADER_SHOW_TESTING_PROGRAM_FEEDBACK;
        $settings['testinputdata'] = POASASSIGNMENT_GRADER_SHOW_TEST_INPUT_DATA;
        $settings['testoutputdata'] = POASASSIGNMENT_GRADER_SHOW_OUTPUT_STUDENT_DATA;
        $settings['diff'] = POASASSIGNMENT_GRADER_SHOW_DIFF;
        $settings['testsnames'] = POASASSIGNMENT_GRADER_SHOW_TESTS_NAMES;
        $settings['numberofpassedtest'] = POASASSIGNMENT_GRADER_SHOW_NUMBER_OF_PASSED_TESTS;
        $settings['rating'] = POASASSIGNMENT_GRADER_SHOW_RATING;
        
        // Shows student options checkboxes
        $studentshowoptionsgrp = array();
        $studentshowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'studentshowfeedback', 
                                                          '', 
                                                          get_string('showfeedback', 'poasassignment_grader'));
        $studentshowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'studentshowtestinputdata', 
                                                          '', 
                                                          get_string('showtestinputdata', 'poasassignment_grader'));
        $studentshowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'studentshowtestoutputdata', 
                                                          '', 
                                                          get_string('showtestoutputdata', 'poasassignment_grader'));
        $studentshowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'studentshowdiff', 
                                                          '', 
                                                          get_string('showdiff', 'poasassignment_grader'));
        $studentshowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'studentshowtestsnames', 
                                                          '', 
                                                          get_string('showtestsnames', 'poasassignment_grader'));
        $studentshowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'studentshownumberofpassedtest', 
                                                          '', 
                                                          get_string('shownumberofpassedtest', 'poasassignment_grader'));
        $studentshowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'studentshowrating', 
                                                          '', 
                                                          get_string('showrating', 'poasassignment_grader'));
        $mform->addGroup($studentshowoptionsgrp, 
                         'studentshowoptionsgrp', 
                         get_string('studentshowoptionsgrp', 'poasassignment_grader'), 
                         '<br>', 
                         false);
        // Load current settings from db
        foreach($settings as $field => $flag) {
            if($usedgraderrecord->teacherresultoptions & $flag)
            $mform->setDefault('studentshow'.$field,'true');
        }
            
        // Shows teacher options checkboxes
        $teachershowoptionsgrp = array();
        $teachershowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'teachershowfeedback', 
                                                          '', 
                                                          get_string('showfeedback', 'poasassignment_grader'));
        $teachershowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'teachershowtestinputdata', 
                                                          '', 
                                                          get_string('showtestinputdata', 'poasassignment_grader'));
        $teachershowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'teachershowtestoutputdata', 
                                                          '', 
                                                          get_string('showtestoutputdata', 'poasassignment_grader'));
        $teachershowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'teachershowdiff', 
                                                          '', 
                                                          get_string('showdiff', 'poasassignment_grader'));
        $teachershowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'teachershowtestsnames', 
                                                          '', 
                                                          get_string('showtestsnames', 'poasassignment_grader'));
        $teachershowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'teachershownumberofpassedtest', 
                                                          '', 
                                                          get_string('shownumberofpassedtest', 'poasassignment_grader'));
        $teachershowoptionsgrp[] = &$mform->createElement('checkbox', 
                                                          'teachershowrating', 
                                                          '', 
                                                          get_string('showrating', 'poasassignment_grader'));
        $mform->addGroup($teachershowoptionsgrp, 
                         'teachershowoptionsgrp', 
                         get_string('teachershowoptionsgrp', 'poasassignment_grader'), 
                         '<br>', 
                         false);
        // Load current settings from db
        foreach($settings as $field => $flag) {
            if($usedgraderrecord->teacherresultoptions & $flag)
            $mform->setDefault('teachershow'.$field,'true');
        }
    }
    
    // Заполняются после выполнения оценивания (массив simple_test_result'ов)
    private $testresults;
    private $successfultestscount;
    
    public function show_result($options) {
        //TODO: вернемся когда это можно будет увидеть, остальные флаги нужно доработать еще будет
        $html = "";
        if($options & POASASSIGNMENT_GRADER_SHOW_RATING) 
            $html += "<br>Rating : ".(100 * $successfultestscount / count($testresults));
        if($options & POASASSIGNMENT_GRADER_SHOW_NUMBER_OF_PASSED_TESTS)
            $html += "<br>Passed tests : ".$successfultestscount;
        
        foreach ($testresults as $testresult) {
            if($options & POASASSIGNMENT_GRADER_SHOW_TESTS_NAMES)
                $html += "<br>".$testresult->testname;
            if($options & POASASSIGNMENT_GRADER_SHOW_TEST_INPUT_DATA)
                $html += "<br>".$testresult->testinputdata;
        }
    }
    
    // TODO: работа с тестами когда ими займусь ближе
        
    // Редактирование тестов( Отвечает за добавление новых тестов и редактирование существующих)
    function edit_tests($tests) {
        return null;
    }
    // Отключает тест
    function turn_off_test($testid) {
        return null;
    }
    // Полностью удаляет тест
    function delete_test($testid) {
        return null;
    }
    
    // Экспорт тестов
    function tests_export($exportParams) {
        return null;
    }
    
    // Импорт тестов
    function tests_import($importParams) {
        return null;
    }
        
    // Производит оценку ответа $submission на задание $taskid конкретного poasassignment'a
    function evaluate($submission,$poasassignmentid,$taskid=-1) {
        return array();
    }
        
    // Отображает список тестов
    function show_tests($poasassignmentid,$taskid=-1){
    
    }
}